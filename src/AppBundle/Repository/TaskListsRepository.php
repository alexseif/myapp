<?php

namespace AppBundle\Repository;

use AppBundle\Entity\TaskLists;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\Persistence\ManagerRegistry;

/**
 * TaskListsRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TaskListsRepository extends ServiceEntityRepository
{
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, TaskLists::class);
    }

    public function findAll()
    {
        return $this
            ->createQueryBuilder('tl')
            ->select('tl, t, a, c, w')
            ->leftJoin('tl.tasks', 't')
            ->leftJoin('tl.account', 'a')
            ->leftJoin('a.client', 'c')
            ->leftJoin('t.workLog', 'w')
            ->orderBy('tl.createdAt', 'ASC')
            ->getQuery()
            ->getResult();
    }

    public function findActive()
    {
        return $this->findActiveQuery()
            ->getQuery()
            ->getResult();
    }

    public function findActiveQuery()
    {
        return $this
            ->createQueryBuilder('tl')
            ->select('tl, a, c')
            ->leftJoin('tl.account', 'a')
            ->leftJoin('a.client', 'c')
            ->where('tl.status <> \'archive\'')
            ->orderBy('tl.createdAt', 'ASC');
    }

    public function findAllWithActiveTasks()
    {
        return $this
            ->createQueryBuilder('tl')
            ->select('tl, t, w, s')
            ->leftJoin('tl.tasks', 't')
            ->leftJoin('t.workLog', 'w')
            ->leftJoin('t.schedule', 's')
            ->where('t.completed <> true')
            ->addOrderBy('t.order', 'ASC')
            ->getQuery()
            ->getResult();
    }

    public function search($searchTerm)
    {
        return $this
            ->createQueryBuilder('tl')
            ->select()
            ->where('tl.name LIKE :searchTerm')
            ->setParameter(':searchTerm', '%'.$searchTerm.'%')
            ->getQuery()
            ->getResult();
    }
}
